# @format

name: Check for Duplicates and Close Issues on PR Merge

on:
  pull_request:
    types: [opened, synchronize, closed]

jobs:
  check-duplicates:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Check for duplicate entries in product.json
        run: |
          # Check for duplicate entries based on the 'link' field in product.json
          jq -r '.[].link' product.json | sort | uniq -d > duplicates.txt
          if [ -s duplicates.txt ]; then
            echo "Duplicate entries found in product.json based on 'link':"
            cat duplicates.txt
            exit 1
          else
            echo "No duplicate entries found based on 'link'."
          fi

  close-issues:
    runs-on: ubuntu-latest
    needs: check-duplicates
    if: github.event.pull_request.merged == true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Close linked issues
        run: |
          ISSUES=$(jq -r '.pull_request.body' "$GITHUB_EVENT_PATH" | grep -Eo '#[0-9]+' | tr -d '#')
          for ISSUE in $ISSUES
          do
            echo "Closing issue #$ISSUE"
            curl -X POST -H "Authorization: token ${{ secrets.TOKEN }}" \
                 -H "Accept: application/vnd.github.v3+json" \
                 https://api.github.com/repos/${{ github.repository }}/issues/$ISSUE/comments \
                 -d '{"body":"Closed by PR #${{ github.event.pull_request.number }}"}'
            curl -X PATCH -H "Authorization: token ${{ secrets.TOKEN }}" \
                 -H "Accept: application/vnd.github.v3+json" \
                 https://api.github.com/repos/${{ github.repository }}/issues/$ISSUE \
                 -d '{"state":"closed"}'
          done
